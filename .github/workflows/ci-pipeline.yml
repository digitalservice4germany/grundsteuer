name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Allow to run this workflow manually
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-app:
    permissions:
      packages: read
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "16.13.0"
          cache: "npm"

      - run: npm install

      - name: Check build
        run: npm run build

      - name: Check format
        run: npm run format:check

      - name: Lint
        run: npm run lint:check

      - name: Run unit tests
        run: npm test

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up test db and mock erica
        run: docker-compose -f ./docker-compose-test.yml -p grundsteuer-test up -d

      - name: Migrate test db
        env:
          DATABASE_URL: postgresql://prisma:prisma@localhost:5433/tests
        run: npx prisma migrate deploy && npx prisma db seed

      - name: Run integration tests
        env:
          DATABASE_URL: postgresql://prisma:prisma@localhost:5433/tests
        run: npm run test:integration

      - name: Run E2E tests
        env:
          APP_ENV: gha
          DATABASE_URL: postgresql://prisma:prisma@localhost:5433/tests
          SESSION_COOKIE_SECRET: thisaintnosecret
          FORM_COOKIE_SECRET: thisalsoaintnosecret
          ERICA_URL: http://localhost:8000
          AUDIT_PUBLIC_KEY: "-----BEGIN PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAvMxhy5PDdUO8EgAXZFK+\nH8X0iswlg685+iXeCEekl+aohrzJEUrUw6GJwmIdqwkK8YDjcZdr7WzcuAazDK5F\nOjenA7IdR7go8fj1fHugaEoX/Mb+qDAsmP1tNCW3my4GJa7g2vl67qLE8QtvX6hz\nn8FaXx8NKlkDQZ85s3yhykpSGC2zBajXukb4GY5dWYURXInbvaH/immNzAlzfAi0\nJylm+qwsHdH281alq7rXc4v3KVoXF4Sj4oAyeDIvHyJwrpNDwrjb/Chu8fKifr3J\nAWPVD2YiwI6WENhCUorZiDiCNjqZtYizXeIrrehQ5YGvujnVKRbPZx9IPrrTE2Lg\nSqKfAMQsxD2pyxW8xN1zu3SthWJX4KwyU+8v4V1Es3ET7QvXyZ9TaoHvLFJuj01G\n9jpupn1hLeCP7cROQ5etjscH2nrRpdIe9ZS4u6Oz1YWYeNDSl+19zLpBdzp3UuZo\nlfrQjXZMHsVaN9u8AnY7+U9Gx44sjwEFmKhiLCI6LzUrzkHVGmg847O9NvLkeYgX\nmOcNJ5U9+8LjUYGjUWttKpLGC+a7CXVmXe7WqKdG3En8yj6gFGLENGYg/Ri/5rOJ\neh1EeTSyLQCzCaSRigeeZ/nlc5xSn6/GgPoIchWHK0bNcHds7afmF4NkRmq+DhS/\nsc6ZU6KrMdtASGVZKvdft/MCAwEAAQ==\n-----END PUBLIC KEY-----\n"
        run: npm run test:e2e

  build-push-image:
    needs: [build-app]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      security-events: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build an image from Dockerfile
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker build -t ${{ env.IMAGE_NAME }}-migrate:${{ github.sha }} . --target build

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ env.IMAGE_NAME }}:${{ github.sha }}"
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: "trivy-results.sarif"

      - name: Login to container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker tag ${{ env.IMAGE_NAME }}-migrate:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-migrate
          docker tag ${{ env.IMAGE_NAME }}-migrate:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-migrate:${{ github.sha }}
          docker push --all-tags ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          docker push --all-tags ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-migrate

  deploy-staging:
    needs: [build-push-image]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Check out infra repo
        uses: actions/checkout@v3
        with:
          repository: digitalservice4germany/grundsteuer-infra
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: Update image tag for staging
        run: |
          cd manifests/overlays/staging
          kustomize edit set image ghcr.io/digitalservice4germany/grundsteuer:${{ github.sha }}
          kustomize edit set image ghcr.io/digitalservice4germany/grundsteuer-migrate:${{ github.sha }}

      - name: Commit and push
        uses: EndBug/add-and-commit@v9
        with:
          add: "manifests/overlays/staging/kustomization.yaml"
          message: "Update staging image to ${{ github.sha }}"
          pathspec_error_handling: exitImmediately
          push: true

      - name: Report Deployment
        uses: satak/webrequest-action@v1.2.3
        with:
          url: ${{ secrets.METRICS_DEPLOYMENT_WEBHOOK_URL }}
          method: POST
          payload: '{"project": "grundsteuer", "version_identifier": "${{ github.sha }}", "environment": "staging", "link": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"}'
          headers: '{"Authorization": "Token ${{ secrets.METRICS_WEBHOOK_TOKEN }}"}'
