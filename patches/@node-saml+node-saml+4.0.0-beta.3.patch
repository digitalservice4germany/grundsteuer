diff --git a/node_modules/@node-saml/node-saml/lib/algorithms.js b/node_modules/@node-saml/node-saml/lib/algorithms.js
index 5c1524f..b6c524c 100644
--- a/node_modules/@node-saml/node-saml/lib/algorithms.js
+++ b/node_modules/@node-saml/node-saml/lib/algorithms.js
@@ -5,7 +5,7 @@ const crypto = require("crypto");
 function getSigningAlgorithm(shortName) {
     switch (shortName) {
         case "sha256":
-            return "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256";
+            return "http://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1";
         case "sha512":
             return "http://www.w3.org/2001/04/xmldsig-more#rsa-sha512";
         case "sha1":
diff --git a/node_modules/@node-saml/node-saml/lib/saml.js b/node_modules/@node-saml/node-saml/lib/saml.js
index 34e9829..41156f2 100644
--- a/node_modules/@node-saml/node-saml/lib/saml.js
+++ b/node_modules/@node-saml/node-saml/lib/saml.js
@@ -470,30 +470,7 @@ class SAML {
         Object.keys(additionalParameters).forEach((k) => {
             samlMessage[k] = additionalParameters[k] || "";
         });
-        const formInputs = Object.keys(samlMessage)
-            .map((k) => {
-            return '<input type="hidden" name="' + k + '" value="' + quoteattr(samlMessage[k]) + '" />';
-        })
-            .join("\r\n");
-        return [
-            "<!DOCTYPE html>",
-            "<html>",
-            "<head>",
-            '<meta charset="utf-8">',
-            '<meta http-equiv="x-ua-compatible" content="ie=edge">',
-            "</head>",
-            '<body onload="document.forms[0].submit()">',
-            "<noscript>",
-            "<p><strong>Note:</strong> Since your browser does not support JavaScript, you must press the button below once to proceed.</p>",
-            "</noscript>",
-            '<form method="post" action="' + encodeURI(this.options.entryPoint) + '">',
-            formInputs,
-            '<input type="submit" value="Submit" />',
-            "</form>",
-            '<script>document.forms[0].style.display="none";</script>',
-            "</body>",
-            "</html>",
-        ].join("\r\n");
+        return samlMessage["SAMLRequest"];
     }
     async getLogoutUrlAsync(user, RelayState, options) {
         const request = await this._generateLogoutRequest(user);
